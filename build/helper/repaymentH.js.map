{"version":3,"sources":["../../server/helper/repaymentH.js"],"names":["require","repayment","loansHelper","updateLoanPayment","loanID","newAmount","loan","getSingleLoan","setBalance","getBalance","updateLoan","getAmount","addNewLoanRepayment","newRepayment","push","loanId","getRepaymentCount","length","getLoanRepayment","filter","getLoanId","loanRepaymentHelper"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;eACsBA,OAAO,CAAC,sBAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,WAAW,GAAGF,OAAO,CAAC,eAAD,CAA3B;;AAEA,SAASG,iBAAT,CAA2BC,MAA3B,EAAmCC,SAAnC,EAA8C;AAC5C,MAAMC,IAAI,GAAGJ,WAAW,CAACK,aAAZ,CAA0BH,MAA1B,CAAb;AACAE,EAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoBJ,SAApC;AACA,SAAOH,WAAW,CAACQ,UAAZ,CAAuBJ,IAAvB,CAAP;AACD,C,CACD;;;AACAH,iBAAiB,CAAC,CAAD,EAAIF,SAAS,CAAC,CAAD,CAAT,CAAaU,SAAb,EAAJ,CAAjB;;AAEA,SAASC,mBAAT,CAA6BC,YAA7B,EAA2C;AACzCZ,EAAAA,SAAS,CAACa,IAAV,CAAeD,YAAf;AACA,SAAOV,iBAAiB,CAACU,YAAY,CAACE,MAAd,EAAsBF,YAAY,CAACF,SAAb,EAAtB,CAAxB;AACD;;AACD,SAASK,iBAAT,GAA6B;AAC3B,SAAOf,SAAS,CAACgB,MAAjB;AACD;;AACD,SAASC,gBAAT,CAA0Bd,MAA1B,EAAkC;AAChC,SAAOH,SAAS,CAACkB,MAAV,CAAiB,UAAAlB,SAAS;AAAA,WAAIA,SAAS,CAACmB,SAAV,KAAwBhB,MAA5B;AAAA,GAA1B,CAAP;AACD;;AACM,IAAMiB,mBAAmB,GAAG;AACjClB,EAAAA,iBAAiB,EAAjBA,iBADiC;AAEjCS,EAAAA,mBAAmB,EAAnBA,mBAFiC;AAGjCI,EAAAA,iBAAiB,EAAjBA,iBAHiC;AAIjCE,EAAAA,gBAAgB,EAAhBA;AAJiC,CAA5B","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable import/prefer-default-export */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable linebreak-style */\r\nconst { repayment } = require('../models/Repayment1');\r\nconst loansHelper = require('./loansHelper');\r\n\r\nfunction updateLoanPayment(loanID, newAmount) {\r\n  const loan = loansHelper.getSingleLoan(loanID);\r\n  loan.setBalance(loan.getBalance() - newAmount);\r\n  return loansHelper.updateLoan(loan);\r\n}\r\n// updateLoanPayment(0, loanRepayment.loanRepaymentData[0].getAmount());\r\nupdateLoanPayment(0, repayment[0].getAmount());\r\n\r\nfunction addNewLoanRepayment(newRepayment) {\r\n  repayment.push(newRepayment);\r\n  return updateLoanPayment(newRepayment.loanId, newRepayment.getAmount());\r\n}\r\nfunction getRepaymentCount() {\r\n  return repayment.length;\r\n}\r\nfunction getLoanRepayment(loanID) {\r\n  return repayment.filter(repayment => repayment.getLoanId === loanID);\r\n}\r\nexport const loanRepaymentHelper = {\r\n  updateLoanPayment,\r\n  addNewLoanRepayment,\r\n  getRepaymentCount,\r\n  getLoanRepayment,\r\n};\r\n"],"file":"repaymentH.js"}