{"version":3,"sources":["../../server/test/loanTest.js"],"names":["assert","require","chai","chaiHttp","expect","app","should","use","newLoanCorrectData","userMail","tenor","amount","duplicateLoanRequestData","FakeUserLoanRequestData","describe","it","done","request","get","send","end","err","res","have","status","console","log","body","to","be","equal","data","post","patch"],"mappings":"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","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\nconst assert = require('assert');\r\nconst chai = require('chai');\r\nconst chaiHttp = require('chai-http');\r\nconst { expect } = require('chai');\r\nconst app = require('../config/index');\r\n\r\nconst should = chai.should();\r\nchai.use(chaiHttp);\r\n\r\nconst newLoanCorrectData = {\r\n  userMail: 'mwafrikajosue@gmail.com',\r\n  tenor: 12,\r\n  amount: 2000,\r\n};\r\nconst duplicateLoanRequestData = {\r\n  userMail: 'mwafrikajosue@gmail.com',\r\n  tenor: 12,\r\n  amount: 2000,\r\n};\r\nconst FakeUserLoanRequestData = {\r\n  userMail: 'mwafrikajosue@gmail.com',\r\n  tenor: 12,\r\n  amount: 2000,\r\n};\r\ndescribe('Apply for only one loan', () => {\r\n  it('it should return the loan with id=0', (done) => {\r\n    chai.request(app.app)\r\n      .get('/v1/loans/0')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n  it('it should return a 400 status since the loan id 1500 doesn\\'t exist', (done) => {\r\n    chai.request(app.app)\r\n      .get('/v1/loans/1500')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n\r\n        done();\r\n      });\r\n  });\r\n});\r\ndescribe('Get current loans spec', () => {\r\n  it('it should return the currents loans', (done) => {\r\n    chai.request(app.app)\r\n      .get('/v1/loans/?status=approved&repaid=false')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should return the current loans of mwafrikajosue@gmail.com', (done) => {\r\n    chai.request(app.app)\r\n      .get('/v1/loans/user/mwafrikajosue@gmail.com/?status=approved&repaid=false')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        expect(0).to.be.equal(res.body.data);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('Get all repaid loans specs', () => {\r\n  it('it should return all the repaid loans', (done) => {\r\n    chai.request(app.app)\r\n      .get('/v1/loans/?status=approved&repaid=true')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n  it('it should return all the repaid loans for a specific user', (done) => {\r\n    chai.request(app.app)\r\n      .get('/v1/loans/user/mwafrikajosue@gmail.com/?status=approved&repaid=true')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        expect(0).to.be.equal(res.body.data);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n});\r\ndescribe('Get all  loans specs', () => {\r\n  it('it should return all loans', (done) => {\r\n    chai.request(app.app)\r\n      .get('/v1/loans/')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n  it('it should return all loans for a specific user', (done) => {\r\n    chai.request(app.app)\r\n      .get('/v1/loans/user/mwafrikajosue@gmail.com/')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        expect(0).to.be.equal(res.body.data);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('Post a new loan', () => {\r\n  it('it should a 400 status because of Undefinned values', (done) => {\r\n    chai.request(app.app)\r\n      .post('/v1/loans/')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should return the new loan data', (done) => {\r\n    chai.request(app.app)\r\n      .post('/v1/loans/')\r\n      .send(newLoanCorrectData)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n  // it('it should return 400 status since the user has a current loan', (done) => {\r\n  //   chai.request(app.app)\r\n  //     .post('/v1/loans/')\r\n  //     .send(duplicateLoanRequestData)\r\n  //     .end((err, res) => {\r\n  //       res.should.have.status(400);\r\n  //       console.log(res.body);\r\n  //       done();\r\n  //     });\r\n  // });\r\n  // it('it should return 403 status since the user doesn\\'t exist', (done) => {\r\n  //   chai.request(app.app)\r\n  //     .post('/v1/loans/')\r\n  //     .send(FakeUserLoanRequestData)\r\n  //     .end((err, res) => {\r\n  //       res.should.have.status(403);\r\n  //       console.log(res.body);\r\n  //       done();\r\n  //     });\r\n  // });\r\n});\r\ndescribe('approve or reject loan', () => {\r\n  it('it should a 400 status because for not found loan id', (done) => {\r\n    chai.request(app.app)\r\n      .patch('/v1/loans/200')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n  it('it should a 401 status when loan already approved', (done) => {\r\n    chai.request(app.app)\r\n      .patch('/v1/loans/0')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(401);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n  it('it should a 200 status and loan data when everything is okay', (done) => {\r\n    chai.request(app.app)\r\n      .patch('/v1/loans/7')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        console.log(res.body);\r\n        done();\r\n      });\r\n  });\r\n});\r\n"],"file":"loanTest.js"}