{"version":3,"sources":["../../server/test/loginTest.js"],"names":["chai","require","chaiHttp","app","should","use","login_details","email","password","loginDetailsTrue","describe","it","done","request","post","send","end","err","res","have","status","console","log","body","message","expect","JSON","parse","data","emails","equal","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,iBAAD,CAAnB;;AAEA,IAAMG,MAAM,GAAGJ,IAAI,CAACI,MAAL,EAAf;AACAJ,IAAI,CAACK,GAAL,CAASH,QAAT;AAEA,IAAMI,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,iBADa;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAtB;AAKA,IAAMC,gBAAgB,GAAG;AACvBF,EAAAA,KAAK,EAAE,yBADgB;AAEvBC,EAAAA,QAAQ,EAAE;AAFa,CAAzB;AAKAE,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBC,EAAAA,EAAE,CAAC,4CAAD,EAA+C,UAACC,IAAD,EAAU;AACzDZ,IAAAA,IAAI,CAACa,OAAL,CAAaV,GAAG,CAACA,GAAjB,EACGW,IADH,CACQ,iBADR,EAEGC,IAFH,CAEQ,EAFR,EAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,MAAAA,GAAG,CAACd,MAAJ,CAAWe,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASC,OAArB;AACAZ,MAAAA,IAAI;AACL,KAPH;AAQD,GATC,CAAF;AAUAD,EAAAA,EAAE,CAAC,iEAAD,EAAoE,UAACC,IAAD,EAAU;AAC9EZ,IAAAA,IAAI,CAACa,OAAL,CAAaV,GAAG,CAACA,GAAjB,EACGW,IADH,CACQ,iBADR,EAEGC,IAFH,CAEQT,aAFR,EAGGU,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,MAAAA,GAAG,CAACd,MAAJ,CAAWe,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASC,OAArB;AACAZ,MAAAA,IAAI;AACL,KAPH;AAQD,GATC,CAAF;AAUAD,EAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACC,IAAD,EAAU;AAC5DZ,IAAAA,IAAI,CAACa,OAAL,CAAaV,GAAG,CAACA,GAAjB,EACGW,IADH,CACQ,iBADR,EAEGC,IAFH,CAEQN,gBAFR,EAGGO,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,MAAAA,GAAG,CAACd,MAAJ,CAAWe,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACApB,MAAAA,IAAI,CAACyB,MAAL,CAAYC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACK,IAAJ,CAASK,IAApB,EAA0BC,MAAtC,EAA8CC,KAA9C,CAAoD,yBAApD;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACK,IAAJ,CAASK,IAApB,CAAZ;AACAhB,MAAAA,IAAI;AACL,KARH;AASD,GAVC,CAAF;AAWD,CAhCO,CAAR;AAkCAmB,MAAM,CAACC,OAAP,CAAe7B,GAAf,GAAqBA,GAAG,CAACA,GAAzB","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\n\r\nconst chai = require('chai');\r\nconst chaiHttp = require('chai-http');\r\nconst app = require('../config/index');\r\n\r\nconst should = chai.should();\r\nchai.use(chaiHttp);\r\n\r\nconst login_details = {\r\n  email: 'josue@gmail.com',\r\n  password: 'jos123',\r\n};\r\n\r\nconst loginDetailsTrue = {\r\n  email: 'mwafrikajosue@gmail.com',\r\n  password: '123',\r\n};\r\n\r\ndescribe('login', () => {\r\n  it('it should not login with undefinned values', (done) => {\r\n    chai.request(app.app)\r\n      .post('/v1/auth/signin')\r\n      .send('')\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        console.log(res.body.message);\r\n        done();\r\n      });\r\n  });\r\n  it('should return a 403 status when wrong mail or password provided', (done) => {\r\n    chai.request(app.app)\r\n      .post('/v1/auth/signin')\r\n      .send(login_details)\r\n      .end((err, res) => {\r\n        res.should.have.status(403);\r\n        console.log(res.body.message);\r\n        done();\r\n      });\r\n  });\r\n  it('should return a 200 status when it is correct', (done) => {\r\n    chai.request(app.app)\r\n      .post('/v1/auth/signin')\r\n      .send(loginDetailsTrue)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        chai.expect(JSON.parse(res.body.data).emails).equal('mwafrikajosue@gmail.com');\r\n        console.log(JSON.parse(res.body.data));\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\nmodule.exports.app = app.app;\r\n"],"file":"loginTest.js"}