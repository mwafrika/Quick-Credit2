{"version":3,"sources":["../../server/controllers/Userloan.js"],"names":["require","getCurrentLoans","getRepaidLoans","getAllLoans","addUserLoan","getLoanCount","getSingleUser","Loan","getUserLoan","req","res","query","status","repaid","send","data","JSON","stringify","params","email","addNewLoan","errorMessage","body","userMail","tenor","Number","isNaN","amount","user","currentLoans","newLoan","parseInt","error","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable linebreak-style */\r\nconst {\r\n  getCurrentLoans, getRepaidLoans, getAllLoans, addUserLoan, getLoanCount,\r\n} = require('../helper/loansHelper');\r\nconst { getSingleUser } = require('../helper/userHelper.js');\r\n\r\n\r\nconst Loan = require('../models/Loan1');\r\n\r\nfunction getUserLoan(req, res) {\r\n  if (req.query.status === 'approved' && req.query.repaid === 'false') {\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: JSON.stringify(getCurrentLoans(req.params.email)),\r\n    });\r\n  } else if (req.query.status === 'approved' && req.query.repaid === 'true') {\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: JSON.stringify(getRepaidLoans(req.params.email)),\r\n    });\r\n  } else {\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: JSON.stringify(getAllLoans(req.params.email)),\r\n    });\r\n  }\r\n}\r\nfunction addNewLoan(req, res) {\r\n  let errorMessage = '';\r\n  let status = 400;\r\n  if (!req.body.userMail) errorMessage = 'Bad request, Please provide the user email';\r\n  else if (!req.body.tenor || Number.isNaN(req.body.tenor)) errorMessage = 'Bad request, Please provide a valide tenor';\r\n  else if (!req.body.amount || Number.isNaN(req.body.amount)) errorMessage = 'Please provide a valide amount';\r\n  else {\r\n    const user = getSingleUser(req.body.userMail);\r\n    const currentLoans = getCurrentLoans(req.body.userMail);\r\n    if (!user[0]) {\r\n      errorMessage = 'This user email doesn\\'t exist';\r\n      status = 403;\r\n    } else if (currentLoans[0]) {\r\n      errorMessage = 'Unauthorised, You still have a not fully paid loan';\r\n      status = 400;\r\n    } else {\r\n      // eslint-disable-next-line max-len\r\n      const newLoan = addUserLoan(new Loan.Loan(getLoanCount(), req.body.userMail, Number.parseInt(req.body.tenor, 10), Number.parseInt(req.body.amount, 10)));\r\n\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: JSON.stringify(newLoan),\r\n      });\r\n    }\r\n  }\r\n  if (errorMessage) {\r\n    res.status(status).send({\r\n      status,\r\n      error: errorMessage,\r\n    });\r\n  }\r\n}\r\nmodule.exports = {\r\n  getUserLoan,\r\n  addNewLoan,\r\n};\r\n"],"file":"Userloan.js"}