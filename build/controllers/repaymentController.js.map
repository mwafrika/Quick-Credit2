{"version":3,"sources":["../../server/controllers/repaymentController.js"],"names":["loanHelper","require","LoanRepayment","loanRepaymentHelper","addPayment","req","res","loan","getSingleLoan","params","loanID","isRepaid","body","amount","isNaN","tenorCovered","Number","parseFloat","getPaymentInstallment","newRepayment","getRepaymentCount","getID","status","send","data","JSON","stringify","addNewLoanRepayment","message","getRepayments","loans","getLoanRepayment","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,uBAAD,CAA1B;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,sBAAD,CAA7B;;AACA,IAAME,mBAAmB,GAAGF,OAAO,CAAC,sBAAD,CAAnC;;AAEA,SAASG,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,MAAMC,IAAI,GAAGP,UAAU,CAACQ,aAAX,CAAyBH,GAAG,CAACI,MAAJ,CAAWC,MAApC,CAAb;;AACA,MAAIH,IAAJ,EAAU;AACR,QAAI,CAAEA,IAAI,CAACI,QAAL,EAAN,EAAuB;AACrB,UAAIN,GAAG,CAACO,IAAJ,CAASC,MAAT,IAAoB,CAACC,KAAK,CAACT,GAAG,CAACO,IAAJ,CAASC,MAAV,CAA9B,EAAkD;AAChD,YAAME,YAAY,GAAGC,MAAM,CAACC,UAAP,CAAkBZ,GAAG,CAACO,IAAJ,CAASC,MAA3B,IAAqCN,IAAI,CAACW,qBAAL,EAA1D;AACA,YAAMC,YAAY,GAAG,IAAIjB,aAAa,CAACA,aAAlB,CAAgCC,mBAAmB,CAACiB,iBAApB,EAAhC,EAAyEb,IAAI,CAACc,KAAL,EAAzE,EAAuFhB,GAAG,CAACO,IAAJ,CAASC,MAAhG,EAAwGE,YAAxG,CAArB;AACAT,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,UAAAA,MAAM,EAAE,GADW;AAEnBE,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,mBAAmB,CAACwB,mBAApB,CAAwCR,YAAxC,CAAf;AAFa,SAArB;AAID,OAPD,MAOO;AACLb,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,UAAAA,MAAM,EAAE,GADW;AAEnBM,UAAAA,OAAO,EAAE;AAFU,SAArB;AAID;AACF,KAdD,MAcO;AACLtB,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,QAAAA,MAAM,EAAE,GADW;AAEnBM,QAAAA,OAAO,EAAE;AAFU,OAArB;AAID;AACF,GArBD,MAqBO;AACLtB,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBM,MAAAA,OAAO,EAAE;AAFU,KAArB;AAID;AACF;;AACD,SAASC,aAAT,CAAuBxB,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAMwB,KAAK,GAAG3B,mBAAmB,CAAC4B,gBAApB,CAAqC1B,GAAG,CAACI,MAAJ,CAAWC,MAAhD,CAAd;;AACA,MAAIoB,KAAJ,EAAW;AACTxB,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,KAAf;AAFa,KAArB;AAID,GALD,MAKO;AACLxB,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBM,MAAAA,OAAO,EAAE;AAFU,KAArB;AAID;AACF;;AACDI,MAAM,CAACC,OAAP,GAAiB;AACf7B,EAAAA,UAAU,EAAVA,UADe;AAEfyB,EAAAA,aAAa,EAAbA;AAFe,CAAjB","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable radix */\r\n/* eslint-disable max-len */\r\n/* eslint-disable linebreak-style */\r\n\r\nconst loanHelper = require('../helper/loansHelper');\r\nconst LoanRepayment = require('../models/Repayment1');\r\nconst loanRepaymentHelper = require('../helper/repaymentH');\r\n\r\nfunction addPayment(req, res) {\r\n  const loan = loanHelper.getSingleLoan(req.params.loanID);\r\n  if (loan) {\r\n    if (!(loan.isRepaid())){\r\n      if (req.body.amount && (!isNaN(req.body.amount))) {\r\n        const tenorCovered = Number.parseFloat(req.body.amount) / loan.getPaymentInstallment();\r\n        const newRepayment = new LoanRepayment.LoanRepayment(loanRepaymentHelper.getRepaymentCount(), loan.getID(), req.body.amount, tenorCovered);\r\n        res.status(200).send({\r\n          status: 200,\r\n          data: JSON.stringify(loanRepaymentHelper.addNewLoanRepayment(newRepayment)),\r\n        });\r\n      } else {\r\n        res.status(400).send({\r\n          status: 400,\r\n          message: 'Please provide valid parameters',\r\n        });\r\n      }\r\n    } else {\r\n      res.status(401).send({\r\n        status: 401,\r\n        message: 'This loan is completly repaid',\r\n      });\r\n    }\r\n  } else {\r\n    res.status(400).send({\r\n      status: 400,\r\n      message: 'There is no loan with such an ID',\r\n    });\r\n  }\r\n}\r\nfunction getRepayments(req, res) {\r\n  const loans = loanRepaymentHelper.getLoanRepayment(req.params.loanID);\r\n  if (loans) {\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: JSON.stringify(loans),\r\n    });\r\n  } else {\r\n    res.status(400).send({\r\n      status: 400,\r\n      message: 'Please provide a correct loan ID',\r\n    });\r\n  }\r\n}\r\nmodule.exports = {\r\n  addPayment,\r\n  getRepayments,\r\n};\r\n"],"file":"repaymentController.js"}