{"version":3,"sources":["../../server/controllers/signup.js"],"names":["signup","req","res","errorMessage","body","email","fname","lname","address","country","password","status","send","message","user","newUser","Users","getUsersCount","data","replacerJson"],"mappings":";;;;;;;AAKA;;AACA;;AACA;;AAPA;;AACA;;AACA;;AACA;AAMA;AACO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAIC,YAAY,GAAG,EAAnB,CADkC,CACX;;AACvB,MAAI,CAACF,GAAG,CAACG,IAAJ,CAASC,KAAd,EAAqBF,YAAY,GAAG,sBAAf,CAArB,KACK,IAAI,CAACF,GAAG,CAACG,IAAJ,CAASE,KAAd,EAAoBH,YAAY,GAAG,+BAAf,CAApB,KACA,IAAI,CAACF,GAAG,CAACG,IAAJ,CAASG,KAAd,EAAoBJ,YAAY,GAAG,8BAAf,CAApB,KACA,IAAI,CAACF,GAAG,CAACG,IAAJ,CAASI,OAAd,EAAsBL,YAAY,GAAG,4BAAf,CAAtB,KACA,IAAI,CAACF,GAAG,CAACG,IAAJ,CAASK,OAAd,EAAsBN,YAAY,GAAG,4BAAf,CAAtB,KACA,IAAI,CAACF,GAAG,CAACG,IAAJ,CAASM,QAAd,EAAuBP,YAAY,GAAG,0BAAf;;AAC5B,MAAIA,YAAJ,EAAkB;AAChBD,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBE,MAAAA,OAAO,EAAEV;AAFU,KAArB;AAID,GALD,MAKO;AACL,QAAMW,IAAI,GAAG,+BAAcb,GAAG,CAACG,IAAJ,CAASC,KAAvB,CAAb;;AACA,QAAI,CAACS,IAAI,CAAC,CAAD,CAAT,EAAc;AACZ,UAAMC,OAAO,GAAG,IAAIC,YAAJ,CAAUC,yBAAV,EAAyBhB,GAAG,CAACG,IAAJ,CAASE,KAAlC,EAAyCL,GAAG,CAACG,IAAJ,CAASG,KAAlD,EAAyDN,GAAG,CAACG,IAAJ,CAASC,KAAlE,EACdJ,GAAG,CAACG,IAAJ,CAASM,QADK,EACK,YADL,EACmB,KADnB,EAC0BT,GAAG,CAACG,IAAJ,CAASI,OADnC,CAAhB;AAEA,+BAAQO,OAAR;AACAb,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,QAAAA,MAAM,EAAE,GADW;AAEnBO,QAAAA,IAAI,EAAEH,OAFa;AAGnBI,QAAAA,YAAY,EAAZA;AAHmB,OAArB;AAKD,KATD,MASO;AACLjB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,QAAAA,MAAM,EAAE,GADW;AAEnBE,QAAAA,OAAO,EAAE;AAFU,OAArB;AAID;AACF;;AACD,SAAOX,GAAP;AACD,CAhCM","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable import/prefer-default-export */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable linebreak-style */\r\n\r\nimport { getSingleUser, getUsersCount, addUser } from '../helper/userHelper';\r\nimport { Users } from '../models/users1';\r\nimport { replacerJson } from '../helper/indexH';\r\n\r\n// Parse incoming requests data\r\nexport const signup = (req, res) => {\r\n  let errorMessage = ''; // i must use validator to validate inputs \r\n  if (!req.body.email) errorMessage = 'Email is not defined';\r\n  else if (!req.body.fname)errorMessage = 'THe first name is not defined';\r\n  else if (!req.body.lname)errorMessage = 'The last name is not defined';\r\n  else if (!req.body.address)errorMessage = 'the address is not defined';\r\n  else if (!req.body.country)errorMessage = 'The country does not exist';\r\n  else if (!req.body.password)errorMessage = 'the password is required';\r\n  if (errorMessage) {\r\n    res.status(400).send({\r\n      status: 400,\r\n      message: errorMessage,\r\n    });\r\n  } else {\r\n    const user = getSingleUser(req.body.email);\r\n    if (!user[0]) {\r\n      const newUser = new Users(getUsersCount, req.body.fname, req.body.lname, req.body.email,\r\n        req.body.password, 'unverified', false, req.body.address);\r\n      addUser(newUser);\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: newUser,\r\n        replacerJson,\r\n      });\r\n    } else {\r\n      res.status(403).send({\r\n        status: 403,\r\n        message: 'This mail already exists',\r\n      });\r\n    }\r\n  }\r\n  return res;\r\n};\r\n"],"file":"signup.js"}