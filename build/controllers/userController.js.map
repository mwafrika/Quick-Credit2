{"version":3,"sources":["../../server/controllers/userController.js"],"names":["getUserLoan","req","res","query","status","repaid","send","data","params","email","addNewLoan","errorMessage","body","userMail","tenor","Number","isNaN","amount","user","currentLoans","newLoan","Loan","parseInt","error"],"mappings":";;;;;;;AAEA;;AAGA;;AACA;;AANA;AAQO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAc;AACvC,MAAID,GAAG,CAACE,KAAJ,CAAUC,MAAV,KAAqB,UAArB,IAAmCH,GAAG,CAACE,KAAJ,CAAUE,MAAV,KAAqB,OAA5D,EAAqE;AACnEH,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACnBF,MAAAA,MAAM,EAAE,GADW;AAEnBG,MAAAA,IAAI,EAAE,kCAAgBN,GAAG,CAACO,MAAJ,CAAWC,KAA3B;AAFa,KAArB;AAID,GALD,MAKO,IAAIR,GAAG,CAACE,KAAJ,CAAUC,MAAV,KAAqB,UAArB,IAAmCH,GAAG,CAACE,KAAJ,CAAUE,MAAV,KAAqB,MAA5D,EAAoE;AACzEH,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACnBF,MAAAA,MAAM,EAAE,GADW;AAEnBG,MAAAA,IAAI,EAAE,iCAAeN,GAAG,CAACO,MAAJ,CAAWC,KAA1B;AAFa,KAArB;AAID,GALM,MAKA;AACLP,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACnBF,MAAAA,MAAM,EAAE,GADW;AAEnBG,MAAAA,IAAI,EAAE,8BAAYN,GAAG,CAACO,MAAJ,CAAWC,KAAvB;AAFa,KAArB;AAID;AACF,CAjBM;;;;AAkBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACT,GAAD,EAAMC,GAAN,EAAc;AACtC,MAAIS,YAAY,GAAG,EAAnB;AACA,MAAIP,MAAM,GAAG,GAAb;AACA,MAAI,CAACH,GAAG,CAACW,IAAJ,CAASC,QAAd,EAAwBF,YAAY,GAAG,4CAAf,CAAxB,KACK,IAAI,CAACV,GAAG,CAACW,IAAJ,CAASE,KAAV,IAAmBC,MAAM,CAACC,KAAP,CAAaf,GAAG,CAACW,IAAJ,CAASE,KAAtB,CAAvB,EAAqDH,YAAY,GAAG,4CAAf,CAArD,KACA,IAAI,CAACV,GAAG,CAACW,IAAJ,CAASK,MAAV,IAAoBF,MAAM,CAACC,KAAP,CAAaf,GAAG,CAACW,IAAJ,CAASK,MAAtB,CAAxB,EAAuDN,YAAY,GAAG,gCAAf,CAAvD,KACA;AACH,QAAMO,IAAI,GAAG,+BAAcjB,GAAG,CAACW,IAAJ,CAASC,QAAvB,CAAb;AACA,QAAMM,YAAY,GAAG,kCAAgBlB,GAAG,CAACW,IAAJ,CAASC,QAAzB,CAArB;;AACA,QAAI,CAACK,IAAI,CAAC,CAAD,CAAT,EAAc;AACZP,MAAAA,YAAY,GAAG,gCAAf;AACAP,MAAAA,MAAM,GAAG,GAAT;AACD,KAHD,MAGO,IAAIe,YAAY,CAAC,CAAD,CAAhB,EAAqB;AAC1BR,MAAAA,YAAY,GAAG,oDAAf;AACAP,MAAAA,MAAM,GAAG,GAAT;AACD,KAHM,MAGA;AACL;AACA,UAAMgB,OAAO,GAAG,8BAAY,IAAIC,WAAKA,IAAT,CAAc,gCAAd,EAA8BpB,GAAG,CAACW,IAAJ,CAASC,QAAvC,EAAiDE,MAAM,CAACO,QAAP,CAAgBrB,GAAG,CAACW,IAAJ,CAASE,KAAzB,EAAgC,EAAhC,CAAjD,EAAsFC,MAAM,CAACO,QAAP,CAAgBrB,GAAG,CAACW,IAAJ,CAASK,MAAzB,EAAiC,EAAjC,CAAtF,CAAZ,CAAhB;AAEAf,MAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACnBF,QAAAA,MAAM,EAAE,GADW;AAEnBG,QAAAA,IAAI,EAAEa;AAFa,OAArB;AAID;AACF;;AACD,MAAIT,YAAJ,EAAkB;AAChBT,IAAAA,GAAG,CAACE,MAAJ,CAAWA,MAAX,EAAmBE,IAAnB,CAAwB;AACtBF,MAAAA,MAAM,EAANA,MADsB;AAEtBmB,MAAAA,KAAK,EAAEZ;AAFe,KAAxB;AAID;AACF,CA/BM","sourcesContent":["/* eslint-disable linebreak-style */\r\n\r\nimport {\r\n  getCurrentLoans, getRepaidLoans, getAllLoans, addUserLoan, getLoanCount,\r\n} from '../helper/loansHelper';\r\nimport { getSingleUser } from '../helper/userHelper';\r\nimport { Loan } from '../models/Loan1';\r\n\r\nexport const getUserLoan = (req, res) => {\r\n  if (req.query.status === 'approved' && req.query.repaid === 'false') {\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: getCurrentLoans(req.params.email),\r\n    });\r\n  } else if (req.query.status === 'approved' && req.query.repaid === 'true') {\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: getRepaidLoans(req.params.email),\r\n    });\r\n  } else {\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: getAllLoans(req.params.email),\r\n    });\r\n  }\r\n};\r\nexport const addNewLoan = (req, res) => {\r\n  let errorMessage = '';\r\n  let status = 400;\r\n  if (!req.body.userMail) errorMessage = 'Bad request, Please provide the user email';\r\n  else if (!req.body.tenor || Number.isNaN(req.body.tenor)) errorMessage = 'Bad request, Please provide a valide tenor';\r\n  else if (!req.body.amount || Number.isNaN(req.body.amount)) errorMessage = 'Please provide a valide amount';\r\n  else {\r\n    const user = getSingleUser(req.body.userMail);\r\n    const currentLoans = getCurrentLoans(req.body.userMail);\r\n    if (!user[0]) {\r\n      errorMessage = 'This user email doesn\\'t exist';\r\n      status = 403;\r\n    } else if (currentLoans[0]) {\r\n      errorMessage = 'Unauthorised, You still have a not fully paid loan';\r\n      status = 400;\r\n    } else {\r\n      // eslint-disable-next-line max-len\r\n      const newLoan = addUserLoan(new Loan.Loan(getLoanCount(), req.body.userMail, Number.parseInt(req.body.tenor, 10), Number.parseInt(req.body.amount, 10)));\r\n\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: newLoan,\r\n      });\r\n    }\r\n  }\r\n  if (errorMessage) {\r\n    res.status(status).send({\r\n      status,\r\n      error: errorMessage,\r\n    });\r\n  }\r\n};\r\n"],"file":"userController.js"}